// Script to generate plot for documentation of 
// function PressureLoss.Bend.dp_curvedOverall
// of FluidDissipation Library
// 
// Generated by Thorben Vahlenkamp
// 30-09-2008
// last change: 30-01-2014
// Stefan Wischhusen
// XRG Simulation GmbH

cd("./simulations");

translateModel("FluidDissipation.Examples.Verifications.PressureLoss.Bend.dp_curvedOverall");

Advanced.StoreProtectedVariables:=true;

success:=simulateModel("FluidDissipation.Examples.Verifications.PressureLoss.Bend.dp_curvedOverall",startTime=0, stopTime=1, numberOfIntervals=50000, method="dassl", tolerance=1e-005, resultFile="dp_curvedOverall");

if success then

switchToSimulationMode(); 

removePlots();
createPlot(id = 1,
 position = {(-2), (-21), 708, 403},
 x="Re_1[1]",	
 y = {
	"zeta_TOT_1[1]",
	"zeta_TOT_1[2]"  
},
  heading = "Curved bend: Relative curvature radius dependence (Water, angle of turning delta= 90)",
 range = {1e2, 1e6, 1e1, 1e-2},
 autoscale = false,
 autoerase = false,
 autoreplot = true,
 description = false,
 grid = true,
 color = true,
 online = false,
 filename = "dp_curvedOverall.mat",
 logX = true,
 logY = true,
 legends = {
	"Relative curvature radius R_0/d_hyd = 2.26",
	"R_0/d_hyd = 11.71"
},	
 leftTitle = "Pressure loss coefficient (zeta_TOT [-])",
 bottomTitle = "Reynolds number [-]");

createPlot(id = 2,
 position = {(-2), 400, 708, 403},
 x="input_mdot_1[1]",	
 y = {
	"DP_plot_1[1]",
	"DP_plot_1[2]"
},
 heading = "Curved bend: Relative curvature radius dependence (Water, angle of turning delta= 90)",
 range = {1e0, 2e3, 1e2, 1},
 autoscale = true,
 autoerase = true,
 autoreplot = true,
 description = false,
 grid = true,
 color = true,
 online = false,
  filename = "dp_curvedOverall.mat",	
 legends = {
	"Relative curvature radius R_0/d_hyd = 2.26",
	"R_0/d_hyd = 11.71"
},
leftTitle = "Pressure loss [Pa]",
bottomTitle = "Mass flow rate [kg/s]");

createPlot(id = 3,
 position = {708, (-21), 708, 403},
 x="Re_2[1]",	
 y = {	
	"zeta_TOT_2[1]",
	"zeta_TOT_2[2]", 
	"zeta_TOT_2[3]"  
},
 heading = "Curved bend: Angle of curvature dependence (Water, relative curvature radius R_0/d_hyd= 2.26)",
 range = {1e2, 1e6, 1e1, 1e-2},
 autoscale = false,
 autoerase = true,
 autoreplot = true,
 description = false,
 grid = true,
 color = true,
 online = false,
  filename = "dp_curvedOverall.mat",
 logX = true,
 logY = true,	
 legends = {
	"Angle of curvature delta= 30deg",
    "delta= 45deg",
	"delta= 90deg"
},
leftTitle = "Pressure loss coefficient (zeta_TOT [-])",
 bottomTitle = "Reynolds number [-]");
 
 createPlot(id = 4,
 position = {708, 400, 708, 403},
x="input_mdot_2[1]",	
y = {
	"DP_plot_2[1]",
	"DP_plot_2[2]",
	"DP_plot_2[3]"
},
 heading = "Curved bend: Angle of curvature dependence (Water,relative curvature radius R_0/d_hyd= 2.26)",
range = {1e0, 2e3, 1e2, 1},
 autoscale = true,
 autoerase = true,
 autoreplot = true,
 description = false,
 grid = true,
 color = true,
 online = false,
  filename = "dp_curvedOverall.mat",
 legends = {
	"Angle of curvature delta = 30deg", 
	"delta = 45deg",
	"delta = 90deg"
},
leftTitle = "Pressure loss [Pa]",
bottomTitle = "Mass flow rate [kg/s]");

createPlot(id = 5,
   position = {375, 177, 708, 412},
 x="input_mdot_1[1]",
 y = {
	"input_mdot_1[1]",
	"M_FLOW_1[1]",
	"M_FLOW_1[2]"
},
 heading = "Check",
 range = {0, 0.1, 5e5, 0},
 autoscale = true,
 autoerase = true,
 autoreplot = true,
 description = false,
 grid = true,
 color = true,
 online = false,
  filename = "dp_curvedOverall.mat",
 leftTitle = "(Output) Mass flow rate [kg/s]",
 bottomTitle = "(Input) Mass flow rate [kg/s]");

createPlot(id = 6,
   position = {375, 177, 708, 412},
 x="input_mdot_1[1]",
 y = {
	"input_mdot_1[1]",
	"M_FLOW_2[1]",
	"M_FLOW_2[2]",
	"M_FLOW_2[3]"
},
 heading = "Check2",
 range = {0, 0.1, 5e5, 0},
 autoscale = true,
 autoerase = true,
 autoreplot = true,
 description = false,
 grid = true,
 color = true,
 online = false,
  filename = "dp_curvedOverall.mat",
 leftTitle = "(Output) Mass flow rate [kg/s]",
 bottomTitle = "(Input) Mass flow rate [kg/s]");

else

messageDialog(message="Failure in verification model!", timeOut=1e300);

end if;
 
 
cd("..");
